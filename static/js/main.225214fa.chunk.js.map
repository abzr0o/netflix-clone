{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","IsLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","moveiTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleclick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","APIKEY","fetchTrendeing","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComadyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDoucmentaries","Banner","str","n","moveis","setmoveis","requests","req","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Nav","show","handleshow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAKeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAQ,iC,iCC+DGC,MAzDf,YAA+C,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAAc,EACjBC,mBAAS,IADQ,mBACtCC,EADsC,KAC9BC,EAD8B,OAETF,mBAAS,IAFA,mBAEtCG,EAFsC,KAE1BC,EAF0B,KAoC7C,OAhCAC,qBAAU,WAAM,4CACf,4BAAAC,EAAA,sEACuBb,EAAMc,IAAIT,GADjC,cACOU,EADP,OAECN,EAAUM,EAAQC,KAAKC,SAFxB,kBAGQF,GAHR,4CADe,uBAAC,WAAD,wBAMfG,KACE,CAACb,IA0BH,sBAAKc,UAAU,MAAf,UACC,6BAAKf,IACL,qBAAKe,UAAU,cAAf,SACEX,EAAOY,KAAI,SAACC,GAAD,OACX,qBAECC,QAAS,kBArBM,SAACD,GAChBX,EACHC,EAAc,IAEdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,IAC1BC,MAAK,SAACC,GAEN,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDnB,EAAcgB,EAAUb,IAAI,SAE5BiB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAWbG,CAAYd,IAC3BF,UAAS,qBAAgBb,GAAc,mBACvC8B,IAAG,UA/CQ,wCA+CR,OACF9B,EAAae,EAAMgB,YAAchB,EAAMiB,eAExCC,IAAKlB,EAAMG,MANNH,EAAMmB,SAUb9B,GAAc,cAAC,IAAD,CAAS+B,QAAS/B,EAAYgC,KAvClC,CACZC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEXC,SAAU,UC1BPC,EAAS,mCAcAhC,EAZC,CACfiC,eAAe,8BAAD,OAAgCD,GAC9CE,sBAAsB,wBAAD,OAA0BF,EAA1B,uBACrBG,cAAc,4BAAD,OAA8BH,EAA9B,oBACbI,kBAAkB,2BAAD,OAA6BJ,EAA7B,uBAEjBK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,mBAAmB,2BAAD,OAA6BP,EAA7B,sBAClBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,oB,MC+BJS,MAnCf,WAAmB,IAHLC,EAAKC,EAGD,EACWnD,mBAAS,IADpB,mBACVoD,EADU,KACFC,EADE,KAYjB,OAVAhD,qBAAU,WAAM,4CACf,4BAAAC,EAAA,sEACmBb,EAAMc,IAAI+C,EAASZ,uBADtC,cACOa,EADP,OAECF,EACCE,EAAI9C,KAAKC,QAAQ8C,KAAKC,MAAMD,KAAKE,SAAWH,EAAI9C,KAAKC,QAAQiD,UAH/D,kBAKQJ,GALR,4CADe,uBAAC,WAAD,wBAQf5C,KACE,IAEF,yBACCC,UAAU,SACVgD,MAAO,CACNC,eAAgB,QAChBC,gBAAgB,4CAAD,OAA8CV,EAAOrB,cAArD,MACfgC,mBAAoB,iBALtB,UAQErC,QAAQC,IAAIyB,GACb,sBAAKxC,UAAU,cAAf,UACC,oBAAIA,UAAU,eAAd,SAA8BwC,EAAOnC,OACrC,sBAAKL,UAAU,eAAf,UACC,wBAAQA,UAAU,cAAlB,kBACA,wBAAQA,UAAU,cAAlB,wBAED,oBAAIA,UAAU,cAAd,UA/BUsC,EA+BwBE,EAAOY,SA/B1Bb,EA+BoC,KA9B5C,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKS,QAASR,EAAID,EAAIe,OAAO,EAAGd,EAAI,GAAK,MAAQD,QAgCtD,qBAAKtC,UAAU,iB,MCJHsD,MA9Bf,WAAgB,IAAD,EACalE,oBAAS,GADtB,mBACPmE,EADO,KACDC,EADC,KAcd,OAZA/D,qBAAU,WAQT,OAPAgE,OAAOC,iBAAiB,UAAU,WAC7BD,OAAOE,QAAU,IACpBH,GAAW,GAEXA,GAAW,MAGN,WACNC,OAAOG,oBAAoB,aAE1B,IAEF,sBAAK5D,UAAS,cAASuD,GAAQ,YAA/B,UACC,qBACCvD,UAAU,WACViB,IAAI,4EACJG,IAAI,iBAEL,qBACCpB,UAAU,UACViB,IAAI,yEACJG,IAAI,qBCCOyC,MArBf,WACE,OACA,sBAAK7D,UAAU,MAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACCf,MAAM,mBACNC,SAAUU,EAAQkC,sBAClB3C,YAAU,IAEX,cAAC,EAAD,CAAKF,MAAM,gBAAgBC,SAAUU,EAAQiC,iBAC7C,cAAC,EAAD,CAAK5C,MAAM,YAAYC,SAAUU,EAAQmC,gBACzC,cAAC,EAAD,CAAK9C,MAAM,gBAAgBC,SAAUU,EAAQoC,oBAC7C,cAAC,EAAD,CAAK/C,MAAM,gBAAgBC,SAAUU,EAAQqC,oBAC7C,cAAC,EAAD,CAAKhD,MAAM,gBAAgBC,SAAUU,EAAQsC,oBAC7C,cAAC,EAAD,CAAKjD,MAAM,iBAAiBC,SAAUU,EAAQuC,qBAC9C,cAAC,EAAD,CAAKlD,MAAM,eAAeC,SAAUU,EAAQwC,yBCXhC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1D,MAAK,YAAkD,IAA/C2D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.225214fa.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport moveiTrailer from \"movie-trailer\";\r\n\r\nconst Base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, IsLargeRow }) {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tconst request = await axios.get(fetchUrl);\r\n\t\t\tsetMovies(request.data.results);\r\n\t\t\treturn request;\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, [fetchUrl]);\r\n\r\n\tconst otps = {\r\n\t\theight: \"390\",\r\n\t\twidth: \"100%\",\r\n\t\tplayerVars: {\r\n\t\t\t// https://developers.google.com/youtube/player_parameters\r\n\t\t\tautoplay: 1,\r\n\t\t},\r\n\t};\r\n\r\n\tconst handleclick = (movie) => {\r\n\t\tif (trailerUrl) {\r\n\t\t\tsetTrailerUrl(\"\");\r\n\t\t} else {\r\n\t\t\tmoveiTrailer(movie?.name || \"\")\r\n\t\t\t\t.then((url) => {\r\n\t\t\t\t\t// https://www.youtube.com/watch?v=XtMThy8QKqU\r\n\t\t\t\t\tconst urlParams = new URLSearchParams(new URL(url).search);\r\n\t\t\t\t\tsetTrailerUrl(urlParams.get(\"v\"));\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(error));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<div className=\"row_posters\">\r\n\t\t\t\t{movies.map((movie) => (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\tonClick={() => handleclick(movie)}\r\n\t\t\t\t\t\tclassName={`row_poster ${IsLargeRow && \"row_posterlarge\"}`}\r\n\t\t\t\t\t\tsrc={`${Base_url}${\r\n\t\t\t\t\t\t\tIsLargeRow ? movie.poster_path : movie.backdrop_path\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\talt={movie.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t{trailerUrl && <Youtube videoId={trailerUrl} opts={otps} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Row;\r\n","const APIKEY = \"82bf33ea3463dc8790a87d75d8ef6534\";\r\n\r\nconst request = {\r\n\tfetchTrendeing: `/trending/all/week?api_key=${APIKEY}`,\r\n\tfetchNetflixOriginals: `/discover/tv?api_key=${APIKEY}&lwith_networks=213`,\r\n\tfetchTopRated: `/movie/top_rated?api_key=${APIKEY}&&language=en-US`,\r\n\tfetchActionMovies: `/discover/movie?api_key=${APIKEY}&with_genres=28\r\n\t`,\r\n\tfetchComadyMovies: `/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n\tfetchHorrorMovies: `/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n\tfetchRomanceMovies: `/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n\tfetchDoucmentaries: `/discover/movie?api_key=${APIKEY}&with_genres=99`,\r\n};\r\n\r\nexport default request;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./banner.css\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./request\";\r\nfunction tran(str, n) {\r\n\treturn str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n}\r\nfunction Banner() {\r\n\tconst [moveis, setmoveis] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tconst req = await axios.get(requests.fetchNetflixOriginals);\r\n\t\t\tsetmoveis(\r\n\t\t\t\treq.data.results[Math.floor(Math.random() * req.data.results.length)]\r\n\t\t\t);\r\n\t\t\treturn req;\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\treturn (\r\n\t\t<header\r\n\t\t\tclassName=\"banner\"\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundSize: \"cover\",\r\n\t\t\t\tbackgroundImage: `url(\"https://image.tmdb.org/t/p/original/${moveis.backdrop_path}\")`,\r\n\t\t\t\tbackgroundPosition: \"center center\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{console.log(moveis)}\r\n\t\t\t<div className=\"banner_cont\">\r\n\t\t\t\t<h1 className=\"banner_title\">{moveis.name}</h1>\r\n\t\t\t\t<div className=\"banner_butts\">\r\n\t\t\t\t\t<button className=\"banner_butt\">play</button>\r\n\t\t\t\t\t<button className=\"banner_butt\">my list</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h1 className=\"banner_desc\">{tran(moveis.overview, 150)}</h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"fade-bot\"></div>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./nav.css\";\r\n\r\nfunction Nav() {\r\n\tconst [show, handleshow] = useState(false);\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"scroll\", () => {\r\n\t\t\tif (window.scrollY > 100) {\r\n\t\t\t\thandleshow(true);\r\n\t\t\t} else {\r\n\t\t\t\thandleshow(false);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"scroll\");\r\n\t\t};\r\n\t}, []);\r\n\treturn (\r\n\t\t<div className={`nav ${show && \"nav_flat\"}`}>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"nav_logo\"\r\n\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n\t\t\t\talt=\"netflix logo\"\r\n\t\t\t/>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"nav_ava\"\r\n\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n\t\t\t\talt=\"netflix logo\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\nimport Row from \"./Row.js\";\nimport request from \"./request.js\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\n\nfunction App() {\n  return (\n\t\t<div className=\"App\">\n\t\t\t<Nav />\n\t\t\t<Banner />\n\t\t\t<Row\n\t\t\t\ttitle=\"Netflix Origanal\"\n\t\t\t\tfetchUrl={request.fetchNetflixOriginals}\n\t\t\t\tIsLargeRow\n\t\t\t/>\n\t\t\t<Row title=\"Trendeing Now\" fetchUrl={request.fetchTrendeing} />\n\t\t\t<Row title=\"Top rated\" fetchUrl={request.fetchTopRated} />\n\t\t\t<Row title=\"Action movies\" fetchUrl={request.fetchActionMovies} />\n\t\t\t<Row title=\"Comedy movies\" fetchUrl={request.fetchComadyMovies} />\n\t\t\t<Row title=\"Horror movies\" fetchUrl={request.fetchHorrorMovies} />\n\t\t\t<Row title=\"Romance movies\" fetchUrl={request.fetchRomanceMovies} />\n\t\t\t<Row title=\"Documetaries\" fetchUrl={request.fetchDoucmentaries} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}